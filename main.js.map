{"version":3,"sources":["./src/app/dictation-test/dictation-test.component.ts","./src/app/dictation-test/dictation-test.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/dictation-result/dictation-result.component.ts","./src/app/dictation-result/dictation-result.component.html","./src/app/models/DictationTestModel.ts","./src/app/dictation.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {DictationService} from '../dictation.service';\nimport {SpeechSynthesisService, SpeechSynthesisUtteranceFactoryService} from '@kamiazya/ngx-speech-synthesis';\nimport {DictationTestModel, ExamLevel} from '../models/DictationTestModel';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-dictation-test',\n  templateUrl: './dictation-test.component.html',\n  styleUrls: ['./dictation-test.component.css']\n})\nexport class DictationTestComponent implements OnInit {\n\n  contentForSelectLevel: ExamLevel;\n  answerFg: FormGroup;\n\n  constructor(private router: Router,\n              private dictationService: DictationService,\n              private f: SpeechSynthesisUtteranceFactoryService,\n              private svc: SpeechSynthesisService,\n              private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.answerFg = this.formBuilder.group({\n      answers: this.formBuilder.array([\n        this.formBuilder.group({\n          answer: ''\n        })\n      ])\n    });\n    this.testIt();\n    this.addAnswerRows();\n  }\n\n  initAnswerRow(): FormGroup {\n    return this.formBuilder.group({\n      answer: ''\n    });\n  }\n\n  addAnswerRows(): void {\n    const usersArray = this.answerFg.controls.answers as FormArray;\n    this.contentForSelectLevel.level.forEach((lvl, index) => {\n      console.log(this.contentForSelectLevel.level.length, ' - ', index + 1);\n      if (this.contentForSelectLevel.level.length !== index + 1) {\n        usersArray.push(this.initAnswerRow());\n      }\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  speech() {\n  }\n\n  // tslint:disable-next-line:typedef\n  testIt() {\n    // tslint:disable-next-line:triple-equals\n    this.contentForSelectLevel = this.dictationService.getExamDetailsById();\n    console.log('this.dictationService.user.examLevel - ', JSON.stringify(this.contentForSelectLevel));\n  }\n\n  // tslint:disable-next-line:typedef\n  cancel() {\n    this.svc.cancel();\n  }\n\n  // tslint:disable-next-line:typedef\n  pause() {\n    this.svc.pause();\n  }\n\n  // tslint:disable-next-line:typedef\n  resume() {\n    this.svc.resume();\n  }\n\n  // tslint:disable-next-line:typedef\n  submit() {\n    console.log('console.log(this.empForm.value) - ', this.answerFg.value);\n    this.dictationService.answers = this.answerFg.get('answers').value;\n    this.router.navigate(['result']);\n  }\n\n  // tslint:disable-next-line:typedef\n  speak(level: any) {\n    this.svc.speak(this.f.text(level));\n  }\n}\n","<form [formGroup]=\"answerFg\" fxLayout='column' fxLayoutAlign=\"space-around center\" >\n  <div formArrayName=\"answers\" style=\"width: 700px; margin: 5px\">\n    <div *ngFor=\"let lvl of contentForSelectLevel.level; index as i\" [formGroupName]=\"i\" fxLayout=\"row\"\n         fxLayoutAlign=\"space-around center\" style=\"width: 100%\">\n      <button (click)=\"speak(lvl)\" color=\"primary\" mat-raised-button style=\"width: 45%\">\n        {{i + 1}}.Question\n        <mat-icon class=\"material-icons\">play_circle</mat-icon>\n      </button>\n      <mat-form-field style=\"width: 45%\">\n        <mat-label>{{i + 1}}. Answer</mat-label>\n        <input formControlName=\"answer\" matInput value=\"{{lvl}}\">\n      </mat-form-field>\n    </div>\n  </div>\n  <button (click)=\"submit()\" color=\"primary\" fxFlex mat-raised-button style=\"width: 670px\">Submit</button>\n</form>\n\n<!--\n<div>\n  <button (click)=\"speech()\">\n    speech\n  </button>\n  <button (click)=\"resume()\">\n    resume\n  </button>\n  <button (click)=\"pause()\">\n    pause\n  </button>\n  <button (click)=\"cancel()\">\n    cancel\n  </button>\n</div>\n-->\n","import {Component, OnInit} from '@angular/core';\nimport {DictationService} from '../dictation.service';\nimport {FormControl, FormGroup, RequiredValidator, Validators} from '@angular/forms';\nimport {Route, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  value = 'Clear me';\n  msgFromDictationService: string;\n\n  userForm = new FormGroup({\n    name: new FormControl('sdf', Validators.required),\n    ParentName: new FormControl('parent', Validators.required),\n    dob: new FormControl(''),\n    difficultyLevel: new FormControl('2', Validators.required),\n    school: new FormControl('sdfsd', Validators.required),\n  });\n\n  constructor(private dictationService: DictationService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.msgFromDictationService = this.dictationService.msg;\n  }\n\n  // tslint:disable-next-line:typedef\n  startDictationTest() {\n    this.mapUserFormDataToUse();\n    this.router.navigate(['dictation']);\n  }\n\n  // tslint:disable-next-line:typedef\n  mapUserFormDataToUse() {\n    this.dictationService.user.age = this.userForm.get('name').value;\n    this.dictationService.user.ParentName = this.userForm.get('ParentName').value;\n    this.dictationService.user.examLevel = this.userForm.get('difficultyLevel').value;\n    this.dictationService.user.school = this.userForm.get('school').value;\n  }\n\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" style=\"border: 2px solid black\" fxFill>\n  <form [formGroup]=\"userForm\" class=\"example-form\">\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>Name*</mat-label>\n      <input formControlName=\"name\" matInput>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>Parent Name</mat-label>\n      <input matInput value=\"parent\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>DOB</mat-label>\n      <input [matDatepicker]=\"datepicker\" formControlName=\"dob\" matInput>\n      <mat-datepicker-toggle [for]=\"datepicker\" matSuffix></mat-datepicker-toggle>\n      <mat-datepicker #datepicker>\n        <mat-datepicker-actions>\n          <button mat-button matDatepickerCancel>Cancel</button>\n          <button color=\"primary\" mat-raised-button matDatepickerApply>Apply</button>\n        </mat-datepicker-actions>\n      </mat-datepicker>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>Choose difficulty level</mat-label>\n      <mat-select formControlName=\"difficultyLevel\">\n        <mat-option value=\"1\">Level 1</mat-option>\n        <mat-option value=\"2\">Level 2</mat-option>\n        <mat-option value=\"3\">Level 3</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>School</mat-label>\n      <input formControlName=\"school\" matInput value=\"Nobel\">\n    </mat-form-field>\n    <div fxLayoutAlign=\"center center\">\n      <button (click)=\"startDictationTest()\" [disabled]=\"!userForm.valid\" color=\"primary\" mat-raised-button fxFill>\n        Start\n      </button>\n    </div>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {DictationService} from '../dictation.service';\nimport {ExamLevel} from '../models/DictationTestModel';\nimport {BehaviorSubject, Subject} from 'rxjs';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-dictation-result',\n  templateUrl: './dictation-result.component.html',\n  styleUrls: ['./dictation-result.component.css']\n})\nexport class DictationResultComponent implements OnInit {\n\n  selectedExamLevel: ExamLevel;\n  answers: any;\n  // totalMarks: Subject<number> = new BehaviorSubject(0);\n  totalMarks = 0;\n  displayedColumns: string[] = ['Question No', 'Correct Answer', 'Your Answer', 'Result', 'Marks'];\n\n  constructor(private router: Router, private dictationService: DictationService) {\n  }\n\n  ngOnInit(): void {\n    this.selectedExamLevel = this.dictationService.getExamDetailsById();\n    this.answers = this.dictationService.answers;\n    console.log('result this.dictationService.user - ', this.dictationService.user);\n    console.log('result this.dictationService.answers - ', this.dictationService.answers);\n  }\n\n  getResult(index, val): boolean {\n    console.log('(this.selectedExamLevel.level[index] === val) - ', index, val, (this.selectedExamLevel.level[index] === val));\n    const result = this.selectedExamLevel.level[index] === val;\n    /*this.totalMarks.subscribe(f => {\n\n      this.totalMarks.next(f + (result ? 1 : 0));\n    });*/\n    this.totalMarks = this.totalMarks + (result ? 1 : 0);\n    return result;\n  }\n\n  // tslint:disable-next-line:typedef\n  returnToHome() {\n    this.router.navigate(['home']);\n  }\n\n  // tslint:disable-next-line:typedef\n  getQuestion(i) {\n    return this.selectedExamLevel.level[i];\n  }\n\n  // tslint:disable-next-line:typedef\n  getMarks(i: any, answer: any) {\n    return (answer && this.selectedExamLevel.level[i] === answer) ? 1 : 0;\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"margin-top: 5%\">\n  <table [dataSource]=\"answers\" class=\"mat-elevation-z8\" mat-table fxFlex=\"70\">\n    <!-- Item Column -->\n    <ng-container matColumnDef=\"Question No\">\n      <th *matHeaderCellDef mat-header-cell> Question No</th>\n      <td *matCellDef=\"let answer; let i = index;\" mat-cell> {{i + 1}} </td>\n    </ng-container>\n\n    <!-- Cost Column -->\n    <ng-container matColumnDef=\"Correct Answer\">\n      <th *matHeaderCellDef mat-header-cell> Correct Answer</th>\n      <td *matCellDef=\"let answer; let i = index;\" mat-cell> {{getQuestion(i)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Your Answer\">\n      <th *matHeaderCellDef mat-header-cell> Your Answer</th>\n      <td *matCellDef=\"let answer\" mat-cell> {{answer.answer || '-' }} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"Result\">\n      <th *matHeaderCellDef mat-header-cell>Result</th>\n      <td *matCellDef=\"let answer; let i = index;\" mat-cell>\n        <mat-icon *ngIf=\"getResult(i, answer.answer)\" class=\"material-icons; correct_answer\">check_circle_outline\n        </mat-icon>\n        <mat-icon *ngIf=\"!getResult(i, answer.answer)\" class=\"material-icons; wrong_answer\">highlight_off</mat-icon>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Marks\">\n      <th *matHeaderCellDef mat-header-cell> Marks</th>\n      <td *matCellDef=\"let answer; let i = index;\" mat-cell> {{getMarks(i, answer.answer)}} </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n  </table>\n</div>\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n  <mat-label>Total marks: {{totalMarks}}/10</mat-label>\n  <mat-divider></mat-divider>\n  <button (click)=\"returnToHome()\" mat-raised-button color=\"primary\">Return to home...</button>\n</div>\n","export class DictationTestModel {\r\n  private level1 = new ExamLevel('1', ['land', 'small', 'pet', 'nap', 'hot', 'did', 'fox', 'not', 'egg', 'jam']);\r\n  private level2 = new ExamLevel('2', ['always', 'stand', 'afraid', 'waved', 'great', 'believe', 'between', 'pitch', 'drink', 'prey']);\r\n  private level3 = new ExamLevel('3', ['rough', 'grudge', 'stunt', 'cousin', 'umpire', 'payment', 'straight', 'favorite', 'referee', 'communicate']);\r\n  examLevels: ExamLevel[] = [\r\n    this.level1, this.level2, this.level3\r\n  ];\r\n}\r\n\r\nexport class ExamLevel {\r\n  id: string;\r\n  level: string[];\r\n\r\n  constructor(id: string, level: string[]) {\r\n    this.id = id;\r\n    this.level = level;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {DictationTestModel, ExamLevel} from './models/DictationTestModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictationService {\n\n  contents = new DictationTestModel();\n  msg = 'test message from service';\n  user: any = {name: '', parentName: '', age: '', examLevel: '1', school: ''};\n  answers: any;\n\n  constructor() {\n  }\n\n  // tslint:disable-next-line:typedef\n  getExamDetailsById(): ExamLevel {\n    return this.contents.examLevels.find(cs => this.user.examLevel == cs.id);\n  }\n\n\n}\n","import {Component} from '@angular/core';\n\nimport {\n  SpeechSynthesisUtteranceFactoryService,\n  SpeechSynthesisService,\n} from '@kamiazya/ngx-speech-synthesis';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    SpeechSynthesisUtteranceFactoryService,\n  ],\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n\n}\n","<div style=\"height: 100%; width: 100%\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\nimport {\n  SpeechSynthesisModule,\n} from '@kamiazya/ngx-speech-synthesis';\nimport {HomeComponent} from './home/home.component';\nimport {DictationTestComponent} from './dictation-test/dictation-test.component';\nimport {DictationResultComponent} from './dictation-result/dictation-result.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DictationTestComponent,\n    DictationResultComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SpeechSynthesisModule.forRoot({\n      lang: 'en',\n      volume: 1.0,\n      pitch: 1.0,\n      rate: 1.0,\n    }),\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatIconModule,\n    FlexLayoutModule,\n    MatDividerModule,\n    MatTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {DictationTestComponent} from './dictation-test/dictation-test.component';\nimport {DictationResultComponent} from './dictation-result/dictation-result.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'dictation', component: DictationTestComponent},\n  {path: 'result', component: DictationResultComponent},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}